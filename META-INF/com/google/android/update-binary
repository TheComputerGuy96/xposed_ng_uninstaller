#!/sbin/sh
# 
##########################################################################################
# 
# Magisk
# by topjohnwu
# 
# This is a Magisk module uninstaller ZIP for developers
# By Dark1
# Profile:
# https://forum.xda-developers.com/member.php?u=7292542
# https://github.com/dark-1
# 
# This script removes the Magisk module files.
# 
# Do NOT touch this script unless necessary.
# 
##########################################################################################

# Detect whether in boot mode
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true || BOOTMODE=false
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true

# This ZIP shouldn't be flashed in Android/Magisk Manager
$BOOTMODE && abort "! This ZIP can't be flashed through Magisk Manager"

# This path should work in any cases
TMPDIR=/dev/tmp
MOUNTPATH=/magisk
IMG=/data/magisk.img
UNINSTALLER=$TMPDIR/uninstall
MAGISKBIN=/data/magisk

# Default permissions
umask 022

##########################################################################################
# Flashable update-binary preparation
##########################################################################################

OUTFD=$2
ZIP=$3

ui_print() {
  echo -n -e "ui_print $1\n" >> /proc/self/fd/$OUTFD
  echo -n -e "ui_print\n" >> /proc/self/fd/$OUTFD
}

require_new_magisk() {
  ui_print "***********************************"
  ui_print "! $MAGISKBIN isn't setup properly!"
  ui_print "! Please install Magisk v13.1+!"
  ui_print "***********************************"
  exit 1
}

# Mount /data to access MAGISKBIN
mount /data 2>/dev/null

# MAGISKBIN must exist, binaries and utility functions are placed there
[ -d $MAGISKBIN -a -f $MAGISKBIN/magisk -a -f $MAGISKBIN/util_functions.sh ] || require_new_magisk

# Load utility fuctions
. $MAGISKBIN/util_functions.sh
[ ! -z $SCRIPT_VERSION -a $SCRIPT_VERSION -ge 1310 ] || require_new_magisk
get_outfd

# Dummy MODID variable
MODID=uninstall

# Dummy print_modname function
print_modname() {
  # print_modname function
  ui_print "*******************************"
  ui_print "   Magisk module uninstaller   "
  ui_print "*******************************"
}

rm -rf $TMPDIR 2>/dev/null
mkdir -p $UNINSTALLER
unzip -o "$ZIP" config.sh -d $UNINSTALLER 2>/dev/null

##########################################################################################
# Prepare
##########################################################################################

[ ! -f $UNINSTALLER/config.sh ] && abort "! Unable to extract ZIP file!"

. $UNINSTALLER/config.sh

MODPATH=$MOUNTPATH/$MODID

ui_print " "
# Print mod's name
print_modname
ui_print " "
# Please leave this message in your flashable ZIP for credits :)
ui_print "*******************************"
ui_print " Magisk module uninstaller ZIP "
ui_print " By Dark1                      "
ui_print "*******************************"
ui_print " "
ui_print "*******************************"
ui_print " Powered by Magisk (@topjohnwu)"
ui_print "*******************************"
ui_print " "
ui_print "!!!*************************!!!"
ui_print "! Removing Magisk module [Mod ID]: \"$MODID\"!"
ui_print "!!!*************************!!!"
ui_print " "

ui_print "- Mounting /system, /vendor, /data, /cache"
mount -o ro /system 2>/dev/null
mount -o ro /vendor 2>/dev/null
mount /data 2>/dev/null
mount /cache 2>/dev/null

[ ! -f $IMG ] && abort "! Magisk is not installed"

##########################################################################################
# Uninstall
##########################################################################################

# We're going to use magisk binary now, require some recovery fixes
recovery_actions

ui_print "- Mounting $IMG to $MOUNTPATH"
MAGISKLOOP=`$MAGISKBIN/magisk --mountimg $IMG $MOUNTPATH`
is_mounted $MOUNTPATH || abort "! $IMG mount failed..."

# Uninstall Magisk module
rm -rf $MODPATH 2>/dev/null
ui_print "- Removed Magisk module: \"$MODID\"!"

##########################################################################################
# Finalizing
##########################################################################################

$MAGISKBIN/magisk --umountimg $MOUNTPATH $MAGISKLOOP
rmdir $MOUNTPATH

# Shrink the image if possible
image_size_check $IMG
newSizeM=$((curUsedM / 32 * 32 + 64))
if [ $curSizeM -gt $newSizeM ]; then
  ui_print "- Shrinking $IMG to ${newSizeM}M"
  $MAGISKBIN/magisk --resizeimg $IMG $newSizeM
fi

recovery_cleanup

ui_print "- Done"
exit 0
